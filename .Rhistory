print(median_perday)
activity <- read.csv("activity.csv",header=T, sep=",", quote="\"",stringsAsFactors = TRUE)
```
```{r echo=TRUE}
##What is mean total number of steps taken per day?
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday <- mean(perday$steps)
```
```{r}
median_perday <- median(perday$steps)
print(median_perday)
```
```{r echo=FALSE, steps_perday, fig.width=8, fig.height=4}
require(ggplot2)
#plotting a histogram in ggplot
histogram <-  qplot(perday$date, perday$steps, stat='summary', fun.y=sum, geom='histogram') +
print(paste("Mean 2:",mean_perday2)
)
perday2 <- aggregate(formula = steps~date, data=activity2, FUN=sum, na.action=na.omit)
#calculating mean and median
perinterval[which(perinterval$steps==max(perinterval$steps)),]
```
##NA-values
1. The amount of missing values
activity <- read.csv("activity.csv",header=T, sep=",", quote="\"",stringsAsFactors = TRUE)
```
##What is mean total number of steps taken per day?
```{r echo=TRUE}
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday <- mean(perday$steps)
median_perday <- median(perday$steps)
print(mean_perday)
print(median_perday)
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday <- mean(perday$steps)
median_perday <- median(perday$steps)
print(mean_perday)
print(median_perday)
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday <- mean(perday$steps)
median_perday <- median(perday$steps)
print(mean_perday)
print(median_perday)
#summing up the steps per day using aggregate
perday <- aggregate(formula = steps~date, data=activity, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday <- mean(perday$steps)
median_perday <- median(perday$steps)
print(mean_perday)
print(median_perday)
require(ggplot2)
#plotting a histogram in ggplot
histogram <-  qplot(perday$date, perday$steps, stat='summary', fun.y=sum, geom='histogram') +
labs(title='Figure 1\n',
y='Total steps per day', x='Date')
plot(histogram)
perinterval <- aggregate(formula = steps~interval, data=activity, FUN=mean, na.action=na.omit)
plot2 <- qplot(perinterval$interval, perinterval$steps,geom='line') +
labs(title="Figure 2", x="Interval no.", y="Mean number of steps per interval")
plot(plot2)
perinterval[which(perinterval$steps==max(perinterval$steps)),]
#dimensions of 'activity' with only the incomplete cases (NA's). Take the length by adding [1] of the dim() vector c(#rows, #columns=3).
missingvalues <- dim(activity[!complete.cases(activity),])[1]
#missingsteps <- dim(activity[is.na(activity$steps),])[1] #gives the same answer
print(missingvalues)
#head(activity)
miss <- activity[!complete.cases(activity),] #extract the NA rows, keep the rownames (the row numbers they have in 'activity')
head(miss)
fill_miss<-merge(miss,perinterval,by="interval") #use merge (just like index/matching in excel) to go grab an interval's average steps from  'perinterval'.
head(fill_miss) #we now have steps.x and steps.y
activity2<-activity #new data frame
activity2[rownames(miss),1] <- fill_miss$steps.y #miss still knows what row numbers the NA values were at! take activity2 at those rownames, and fill in the 'NA' steps as the 'fill_miss$steps.y'
head(activity2)
#summing up the steps per day using aggregate
perday2 <- aggregate(formula = steps~date, data=activity2, FUN=sum, na.action=na.omit)
#calculating mean and median
mean_perday2 <- mean(perday$steps)
median_perday2 <- median(perday$steps)
print(mean_perday2)
print(median_perday2)
require(ggplot2)
#plotting a histogram in ggplot
histogram2 <-  qplot(x=date, y=steps, data=perday2, stat='summary', fun.y=sum, geom='histogram') +
labs(title='Figure 1: Number of steps per day\n',
y='Total steps per day', x='Date')
plot(histogram2)
mean_perday2 <- mean(perday$steps)
median_perday2 <- median(perday$steps)
format(activity2$date,format = '%u')
activity2$day <- format(activity$date,format = '%u')
?format
activity2$day <- as.integer(format(activity$date,format = '%u'))
activity <- read.csv("activity.csv",header=T, sep=",", quote="\"",stringsAsFactors = FALSE)
activity$date <- as.Date(activity$date)
activity2$date <- as.Date(activity2$date)
activity2$week <- factor(ifelse(format(activity$date,format = '%u') %in% c(1:5),'week','week-end'))
knitr::opts_chunk$set(tidy=FALSE, fig.path='figures/')
